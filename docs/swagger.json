{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Aquatrack app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of Aquatrack app"
  },
  "servers": [
    {
      "url": "https://aquatrack-back-end.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Water",
      "description": "Operations about water."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register new user",
        "operationId": "registerUser",
        "description": "Register new user with their email and password.",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email should be unique. It must be a valid email format.",
                    "type": "string",
                    "example": "johndoe@gmail.com"
                  },
                  "password": {
                    "description": "User's password must be between 6 and 30 characters long and cannot be empty.",
                    "type": "string",
                    "minLength": 6,
                    "maxLength": 30,
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New user successfully registered. Returns a status code, a success message and user information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "$ref": "#/components/responses/409"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login user",
        "operationId": "loginUser",
        "description": "Login a user with their email and password.",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email. It must be a valid email format.",
                    "type": "string",
                    "example": "johndoe@gmail.com"
                  },
                  "password": {
                    "description": "User's password must be between 6 and 30 characters long and cannot be empty.",
                    "type": "string",
                    "minLength": 6,
                    "maxLength": 30,
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully logged in. Returns a status code, a success message and user information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in a user!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "5Rb8g9eKeZtQJQWqdFkfr3XRMmkl1oiLku39SQhJ"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "User not found. Returns status code and error information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout user",
        "operationId": "logoutUser",
        "description": "Logout a user from the app. This will invalidate the user session and clear any authentication tokens.",
        "security": [],
        "responses": {
          "204": {
            "description": "User is successfully logged out. No content is returned."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/users/info": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get user info",
        "operationId": "getUserInfo",
        "description": "Retrieve information about the authenticated user. This endpoint requires the user to be logged in.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user info. Returns a status code, a success message and user information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully retrieved user info!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "User not found. Returns status code and error information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/profile": {
      "patch": {
        "tags": [
          "Auth"
        ],
        "summary": "Patch a user",
        "operationId": "patchUser",
        "description": "Update user information. This endpoint requires the user to be logged in.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "User's email. It must be a valid email format.",
                    "type": "string",
                    "example": "johndoe@gmail.com"
                  },
                  "name": {
                    "description": "User's name must be between 3 and 30 characters long and cannot be empty.",
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 30,
                    "example": "John Doe"
                  },
                  "gender": {
                    "description": "User's gender must be 'woman' or 'man'.",
                    "type": "string",
                    "enum": [
                      "woman",
                      "man"
                    ],
                    "example": "man"
                  },
                  "weight": {
                    "description": "User's weight in kilograms. Default value is 0.",
                    "type": "number",
                    "example": 50
                  },
                  "sportTime": {
                    "description": "User's weekly sport time in hours.",
                    "type": "number",
                    "example": 8
                  },
                  "dailyWater": {
                    "description": "User's daily water intake in milliliters. Default value is 1500.",
                    "type": "number",
                    "example": 1500
                  },
                  "avatar": {
                    "description": "User's avatar image file.",
                    "type": "string",
                    "format": "binary",
                    "example": "avatar.jpg"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully patched. Returns a status code, a success message and user information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched a user!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "User or session not found. Returns status code and error information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "User or session not found"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "User not found"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "refresh session",
        "operationId": "refreshSession",
        "description": "Refresh an existing session using a valid refresh token.",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "refreshToken"
                ],
                "properties": {
                  "refreshToken": {
                    "type": "string",
                    "description": "Refresh token for refreshing the session.",
                    "example": "abcdef123456"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully refreshed the session. Returns a status code, a success message and user information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "5Rb8g9eKeZtQJQWqdFkfr3XRMmkl1oiLku39SQhJ"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Session not found. Returns status code and error information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Session not found"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/all-users": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get users count",
        "operationId": "getAllUsers",
        "description": "Retrieve the total count of existing users in the system.",
        "security": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved the count of all existing users. Returns a status code, a success message and user information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully retrieved users count!"
                    },
                    "data": {
                      "type": "integer",
                      "example": 50
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Users not found. Returns status code and error information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Not found error"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Users not found"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/water/{id}": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get water by id",
        "operationId": "getWaterById",
        "description": "Retrieve water for by ID. This endpoint requires the user to be logged in.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66d7a677430b976ad90d5d34"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved water record by ID. Returns a status code, a success message and the record details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found water records!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/water"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Water record not found. Returns status code and error information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "NotFoundError"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Water record not found"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Water"
        ],
        "summary": "Patch a water record",
        "operationId": "patchWater",
        "description": "Update a record of water intake. This endpoint requires the user to be logged in.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66d7a677430b976ad90d5d34"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "description": "Amount of water consumed, in milliliters.",
                    "type": "number",
                    "example": 250
                  },
                  "date": {
                    "description": "Timestamp when the water was consumed. Format: ISO 8601.",
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-09-17T12:00:00Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated a water record. Returns a status code, a success message and the record details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched a water record!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/water"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Water record not found. Returns status code and error information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Water record not found."
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Water"
        ],
        "summary": "Delete a water record",
        "operationId": "deleteWater",
        "description": "Delete a water record. This endpoint requires the user to be logged in.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66d7a677430b976ad90d5d34"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted the water record. No content is returned."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Water record not found. Returns status code and error information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Water record not found."
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/water": {
      "post": {
        "tags": [
          "Water"
        ],
        "summary": "Create a water record",
        "operationId": "postWater",
        "description": "Create a record of water intake. This endpoint requires the user to be logged in.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "date"
                ],
                "properties": {
                  "amount": {
                    "description": "Amount of water consumed, in milliliters",
                    "type": "number",
                    "example": 250
                  },
                  "date": {
                    "description": "Timestamp when the water was consumed. Format: ISO 8601",
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-09-17T12:00:00Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created a water record. Returns a status code, a success message and the record details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a water record!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/water"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/water/per-day/{date}": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get water per day",
        "operationId": "getWaterPerDay",
        "description": "Retrieve water for a specific day. This endpoint requires the user to be logged in.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Date in ISO 8601 format (YYYY-MM-DD).",
              "example": "2024-09-20"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved water records for a specific day. Returns a status code, a success message and the records details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found water records!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/water"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error. Returns status code and error information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "BadRequestError"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Invalid date format"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Water records not found. Returns status code and error information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "NotFoundError"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Water records not found"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/water/per-month/{date}": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get water per month",
        "operationId": "getWaterPerMonth",
        "description": "Retrieve water for a specific month. This endpoint requires the user to be logged in.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Date in ISO 8601 format (YYYY-MM).",
              "example": "2024-09"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve water for a specific month. Returns a status code, a success message and the records details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found water records!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "integer"
                        },
                        "example": {
                          "10": 900
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error. Returns status code and error information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "BadRequestError"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Invalid date format"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Water records not found. Returns status code and error information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "NotFoundError"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Water records not found"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "_id",
          "email",
          "password",
          "name"
        ],
        "properties": {
          "_id": {
            "description": "User's unique ID created by the database.",
            "type": "string",
            "example": "66d3da9d82c162e0b0d8435f"
          },
          "email": {
            "description": "User's email. It must be a valid email format.",
            "type": "string",
            "example": "johndoe@gmail.com"
          },
          "password": {
            "description": "User's password, must be between 6 and 30 characters long.",
            "type": "string",
            "example": "password123"
          },
          "name": {
            "description": "User's name, must be between 3 and 30 characters long.",
            "type": "string",
            "example": "johndoe"
          },
          "gender": {
            "description": "User's gender, must be either 'woman' or 'man'.",
            "type": "string",
            "enum": [
              "woman",
              "man"
            ],
            "example": "man"
          },
          "weight": {
            "description": "User's weight in kilograms. Default value is 0.",
            "type": "number",
            "example": 60
          },
          "sportTime": {
            "description": "User's weekly sport time in hours. Default value is 0.",
            "type": "number",
            "example": 8
          },
          "dailyWater": {
            "description": "User's daily water intake in milliliters. Default value is 1500.",
            "type": "number",
            "example": 1500
          },
          "avatar": {
            "description": "URL to the user's avatar image stored in Cloudinary.",
            "type": "string",
            "format": "binary",
            "example": "https://cloudinary.com/images/avatar123.jpg"
          }
        }
      },
      "water": {
        "type": "object",
        "required": [
          "_id",
          "amount",
          "date",
          "owner"
        ],
        "properties": {
          "_id": {
            "description": "Water record's unique ID created by the database.",
            "type": "string",
            "example": "66d9b03111aaf046feebffeb"
          },
          "amount": {
            "description": "Amount of water consumed in milliliters",
            "type": "number",
            "example": 250
          },
          "date": {
            "description": "Timestamp when the water was consumed. Format: ISO 8601",
            "type": "string",
            "format": "date-time",
            "example": "2024-09-17T12:00:00Z"
          },
          "owner": {
            "description": "Unique ID of the user who owns the water record.",
            "type": "string",
            "example": "66d7a529430b976ad90d5d05"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized error. Occurs when the user is not authenticated or the session has expired.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Session not found or refresh token is expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Register error - Email in use. Occurs when a user tries to register with an email that is already registered.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "ConflictError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email already in use"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}